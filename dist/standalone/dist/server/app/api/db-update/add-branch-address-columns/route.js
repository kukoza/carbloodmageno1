(()=>{var e={};e.id=5236,e.ids=[5236],e.modules={13878:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=13878,e.exports=r},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},41808:e=>{"use strict";e.exports=require("net")},77282:e=>{"use strict";e.exports=require("process")},12781:e=>{"use strict";e.exports=require("stream")},71576:e=>{"use strict";e.exports=require("string_decoder")},39512:e=>{"use strict";e.exports=require("timers")},24404:e=>{"use strict";e.exports=require("tls")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")},13643:(e,r,t)=>{"use strict";t.r(r),t.d(r,{headerHooks:()=>b,originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>m});var s={};t.r(s),t.d(s,{GET:()=>i});var o=t(95419),a=t(69108),n=t(99678),c=t(78070),u=t(47033);async function i(){try{try{return await (0,u.JT)("SELECT branch_address_th, branch_address_en FROM business_cards LIMIT 1"),c.Z.json({success:!0,message:"Columns already exist"})}catch(e){try{return await (0,u.JT)(`
          ALTER TABLE business_cards 
          ADD COLUMN branch_address_th TEXT AFTER address_en,
          ADD COLUMN branch_address_en TEXT AFTER branch_address_th
        `),c.Z.json({success:!0,message:"Columns added successfully"})}catch(e){return console.error("Error adding branch_address columns:",e),c.Z.json({success:!1,error:e},{status:500})}}}catch(e){return console.error("Error checking or adding columns:",e),c.Z.json({success:!1,error:e},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/db-update/add-branch-address-columns/route",pathname:"/api/db-update/add-branch-address-columns",filename:"route",bundlePath:"app/api/db-update/add-branch-address-columns/route"},resolvedPagePath:"C:\\xampp\\htdocs\\car-booking-system-110\\car-booking-system-110\\app\\api\\db-update\\add-branch-address-columns\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:p,serverHooks:h,headerHooks:b,staticGenerationBailout:m}=d,g="/api/db-update/add-branch-address-columns/route";function x(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:p})}},47033:(e,r,t)=>{"use strict";t.d(r,{Fm:()=>i,JT:()=>c,jB:()=>u});var s=t(63069);let o={host:"43.229.132.209",user:process.env.DB_USER||"rootforbook",password:process.env.DB_PASSWORD||"534jj7?cA",database:process.env.DB_NAME||"carbookingsystem",waitForConnections:!0,connectionLimit:10,queueLimit:0},a=null;async function n(){if(!a)try{console.log("Creating database pool with config:",{host:o.host,user:o.user,database:o.database}),a=s.createPool(o),(await a.getConnection()).release(),console.log("Database pool created and tested successfully")}catch(e){throw console.error("Error creating database pool:",e),Error(`Database connection failed: ${e instanceof Error?e.message:String(e)}`)}return a}async function c(e,r=[]){try{let t=await n();console.log("Executing query:",e,"with params:",r);let[s]=await t.execute(e,r);return{recordset:s}}catch(e){throw console.error("Query execution error:",e),e}}async function u(e,r=[]){try{let{recordset:t}=await c(e,r);return t.length>0?t[0]:null}catch(e){throw console.error("Query execution error:",e),e}}async function i(e,r=[]){try{let t=await n();console.log("Executing insert:",e,"with params:",r);let[s]=await t.execute(e,r);return{insertId:s.insertId}}catch(e){throw console.error("Insert execution error:",e),e}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206,3069],()=>t(13643));module.exports=s})();