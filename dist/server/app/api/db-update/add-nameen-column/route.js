(()=>{var e={};e.id=8839,e.ids=[8839],e.modules={13878:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=13878,e.exports=r},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},41808:e=>{"use strict";e.exports=require("net")},77282:e=>{"use strict";e.exports=require("process")},12781:e=>{"use strict";e.exports=require("stream")},71576:e=>{"use strict";e.exports=require("string_decoder")},39512:e=>{"use strict";e.exports=require("timers")},24404:e=>{"use strict";e.exports=require("tls")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")},64248:(e,r,t)=>{"use strict";t.r(r),t.d(r,{headerHooks:()=>h,originalPathname:()=>x,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>g});var o={};t.r(o),t.d(o,{GET:()=>u});var s=t(95419),n=t(69108),a=t(99678),i=t(78070),c=t(47033);async function u(){try{try{return await (0,c.JT)("SHOW COLUMNS FROM BusinessCards LIKE 'nameEn'",[]),i.Z.json({message:"nameEn column already exists"})}catch(e){console.log("Adding nameEn column to BusinessCards table");try{return await (0,c.JT)("ALTER TABLE BusinessCards ADD COLUMN nameEn VARCHAR(255)",[]),i.Z.json({message:"nameEn column added successfully"})}catch(e){return console.error("Error adding nameEn column:",e),i.Z.json({error:"Failed to add nameEn column"},{status:500})}}}catch(e){return console.error("Error checking/adding nameEn column:",e),i.Z.json({error:"Failed to check/add nameEn column"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/db-update/add-nameen-column/route",pathname:"/api/db-update/add-nameen-column",filename:"route",bundlePath:"app/api/db-update/add-nameen-column/route"},resolvedPagePath:"C:\\xampp\\htdocs\\car-booking-system-110\\car-booking-system-110\\app\\api\\db-update\\add-nameen-column\\route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:p,serverHooks:m,headerHooks:h,staticGenerationBailout:g}=d,x="/api/db-update/add-nameen-column/route";function y(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:p})}},47033:(e,r,t)=>{"use strict";t.d(r,{Fm:()=>u,JT:()=>i,jB:()=>c});var o=t(63069);let s={host:"43.229.132.209",user:process.env.DB_USER||"rootforbook",password:process.env.DB_PASSWORD||"534jj7?cA",database:process.env.DB_NAME||"carbookingsystem",waitForConnections:!0,connectionLimit:10,queueLimit:0},n=null;async function a(){if(!n)try{console.log("Creating database pool with config:",{host:s.host,user:s.user,database:s.database}),n=o.createPool(s),(await n.getConnection()).release(),console.log("Database pool created and tested successfully")}catch(e){throw console.error("Error creating database pool:",e),Error(`Database connection failed: ${e instanceof Error?e.message:String(e)}`)}return n}async function i(e,r=[]){try{let t=await a();console.log("Executing query:",e,"with params:",r);let[o]=await t.execute(e,r);return{recordset:o}}catch(e){throw console.error("Query execution error:",e),e}}async function c(e,r=[]){try{let{recordset:t}=await i(e,r);return t.length>0?t[0]:null}catch(e){throw console.error("Query execution error:",e),e}}async function u(e,r=[]){try{let t=await a();console.log("Executing insert:",e,"with params:",r);let[o]=await t.execute(e,r);return{insertId:o.insertId}}catch(e){throw console.error("Insert execution error:",e),e}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[1638,6206,3069],()=>t(64248));module.exports=o})();