(()=>{var e={};e.id=1380,e.ids=[1380],e.modules={13878:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=13878,e.exports=r},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},41808:e=>{"use strict";e.exports=require("net")},77282:e=>{"use strict";e.exports=require("process")},12781:e=>{"use strict";e.exports=require("stream")},71576:e=>{"use strict";e.exports=require("string_decoder")},39512:e=>{"use strict";e.exports=require("timers")},24404:e=>{"use strict";e.exports=require("tls")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")},48077:(e,r,t)=>{"use strict";t.r(r),t.d(r,{headerHooks:()=>f,originalPathname:()=>y,patchFetch:()=>w,requestAsyncStorage:()=>E,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>h});var s={};t.r(s),t.d(s,{DELETE:()=>d,GET:()=>c,PUT:()=>l});var o=t(95419),a=t(69108),n=t(99678),i=t(47033),u=t(78070);async function c(e,{params:r}){try{let e=r.id,t=await (0,i.jB)(`
      SELECT id, name, email, department, role, phone, employeeId, licenseNumber, avatar
      FROM Users
      WHERE id = ?
      `,[e]);if(!t)return u.Z.json({error:"User not found"},{status:404});return u.Z.json(t)}catch(e){return console.error("Error fetching user:",e),u.Z.json({error:"Failed to fetch user"},{status:500})}}async function l(e,{params:r}){try{let t;let s=r.id,o=await e.text();console.log("Raw request body:",o);try{t=JSON.parse(o),console.log("Parsed user data:",t)}catch(e){return console.error("Error parsing request body:",e),u.Z.json({error:"Invalid JSON in request body"},{status:400})}if(console.log("Received update request for user ID:",s),!t.name||!t.email||!t.department)return console.error("Missing required fields"),u.Z.json({error:"Missing required fields",received:t},{status:400});if(!await (0,i.jB)("SELECT id FROM Users WHERE id = ?",[s]))return console.error("User not found"),u.Z.json({error:"User not found"},{status:404});if(await (0,i.jB)("SELECT id FROM Users WHERE email = ? AND id != ?",[t.email,s]))return console.error("Email already exists"),u.Z.json({error:"Email already exists"},{status:409});console.log("Updating user data in database");let a=`
      UPDATE Users
      SET name = ?, email = ?, department = ?, role = ?, phone = ?, employeeId = ?, licenseNumber = ?, avatar = ?
      WHERE id = ?
    `,n=[t.name,t.email,t.department,t.role,t.phone||null,t.employeeId||null,t.licenseNumber||null,t.avatar||null,s];console.log("Update query:",a),console.log("Update params:",n);try{await (0,i.jB)(a,n),console.log("User data updated successfully")}catch(e){return console.error("Database error during update:",e),u.Z.json({error:"Database error during update",details:e instanceof Error?e.message:"Unknown database error"},{status:500})}let c=await (0,i.jB)(`
      SELECT id, name, email, department, role, phone, employeeId, licenseNumber, avatar
      FROM Users
      WHERE id = ?
      `,[s]);return console.log("Updated user data:",c),u.Z.json(c)}catch(e){return console.error("Error updating user:",e),u.Z.json({error:"Failed to update user",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(e,{params:r}){try{let e=r.id,t=await (0,i.jB)("SELECT id, role, avatar FROM Users WHERE id = ?",[e]);if(!t)return u.Z.json({error:"User not found"},{status:404});if("ผู้ดูแลระบบ"===t.role&&(await (0,i.jB)(`SELECT COUNT(*) as count FROM Users WHERE role = 'ผู้ดูแลระบบ'`,[])).count<=1)return u.Z.json({error:"Cannot delete the last administrator"},{status:400});if((await (0,i.jB)(`SELECT COUNT(*) as count FROM Bookings WHERE userId = ? AND status != 'ยกเลิก'`,[e])).count>0)return u.Z.json({error:"Cannot delete user with active bookings"},{status:400});if(t.avatar)try{let e=t.avatar;if(e&&"string"==typeof e){let r=e.split("/").pop();r&&await fetch("/api/upload/avatar/delete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fileName:r})})}}catch(e){console.error("Error deleting avatar file:",e)}return await (0,i.jB)("DELETE FROM Users WHERE id = ?",[e]),u.Z.json({success:!0})}catch(e){return console.error("Error deleting user:",e),u.Z.json({error:"Failed to delete user"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/users/[id]/route",pathname:"/api/users/[id]",filename:"route",bundlePath:"app/api/users/[id]/route"},resolvedPagePath:"C:\\xampp\\htdocs\\car-booking-system-110\\car-booking-system-110\\app\\api\\users\\[id]\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:E,staticGenerationAsyncStorage:m,serverHooks:g,headerHooks:f,staticGenerationBailout:h}=p,y="/api/users/[id]/route";function w(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},47033:(e,r,t)=>{"use strict";t.d(r,{Fm:()=>c,JT:()=>i,jB:()=>u});var s=t(63069);let o={host:"43.229.132.209",user:process.env.DB_USER||"rootforbook",password:process.env.DB_PASSWORD||"534jj7?cA",database:process.env.DB_NAME||"carbookingsystem",waitForConnections:!0,connectionLimit:10,queueLimit:0},a=null;async function n(){if(!a)try{console.log("Creating database pool with config:",{host:o.host,user:o.user,database:o.database}),a=s.createPool(o),(await a.getConnection()).release(),console.log("Database pool created and tested successfully")}catch(e){throw console.error("Error creating database pool:",e),Error(`Database connection failed: ${e instanceof Error?e.message:String(e)}`)}return a}async function i(e,r=[]){try{let t=await n();console.log("Executing query:",e,"with params:",r);let[s]=await t.execute(e,r);return{recordset:s}}catch(e){throw console.error("Query execution error:",e),e}}async function u(e,r=[]){try{let{recordset:t}=await i(e,r);return t.length>0?t[0]:null}catch(e){throw console.error("Query execution error:",e),e}}async function c(e,r=[]){try{let t=await n();console.log("Executing insert:",e,"with params:",r);let[s]=await t.execute(e,r);return{insertId:s.insertId}}catch(e){throw console.error("Insert execution error:",e),e}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206,3069],()=>t(48077));module.exports=s})();